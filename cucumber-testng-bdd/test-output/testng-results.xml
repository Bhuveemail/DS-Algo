<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="2" passed="2" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-02-17T00:15:30 EST" name="Default suite" finished-at="2024-02-17T00:15:58 EST" duration-ms="28313">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runners.TestRunner@8458f04]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2024-02-17T00:15:30 EST" name="Default test" finished-at="2024-02-17T00:15:58 EST" duration-ms="28313">
      <class name="Runners.TestRunner">
        <test-method is-config="true" signature="setUpClass()[pri:0, instance:Runners.TestRunner@8458f04]" started-at="2024-02-17T00:15:30 EST" name="setUpClass" finished-at="2024-02-17T00:15:30 EST" duration-ms="500" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method is-config="true" signature="startBrowser()[pri:0, instance:Runners.TestRunner@8458f04]" started-at="2024-02-17T00:15:30 EST" name="startBrowser" finished-at="2024-02-17T00:15:32 EST" duration-ms="1389" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startBrowser -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runners.TestRunner@8458f04]" started-at="2024-02-17T00:15:32 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-02-17T00:15:45 EST" duration-ms="12754" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify Implementation of Queue in Python Functionalities for Positive and Negative Scenarios"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Verify the queue functionalities]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tear()[pri:0, instance:Runners.TestRunner@8458f04]" started-at="2024-02-17T00:15:45 EST" name="tear" finished-at="2024-02-17T00:15:45 EST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tear -->
        <test-method is-config="true" signature="startBrowser()[pri:0, instance:Runners.TestRunner@8458f04]" started-at="2024-02-17T00:15:45 EST" name="startBrowser" finished-at="2024-02-17T00:15:46 EST" duration-ms="1023" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startBrowser -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runners.TestRunner@8458f04]" started-at="2024-02-17T00:15:46 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-02-17T00:15:57 EST" duration-ms="11906" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify Implementation of Queue in Python Functionalities for Positive and Negative Scenarios"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Verify the queue functionalities]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:Runners.TestRunner@8458f04]" started-at="2024-02-17T00:15:57 EST" name="tearDownClass" finished-at="2024-02-17T00:15:58 EST" duration-ms="695" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
        <test-method is-config="true" signature="tear()[pri:0, instance:Runners.TestRunner@8458f04]" started-at="2024-02-17T00:15:57 EST" name="tear" finished-at="2024-02-17T00:15:57 EST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tear -->
      </class> <!-- Runners.TestRunner -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
